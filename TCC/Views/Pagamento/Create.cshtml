@model TCC.Models.Pagamento

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Pagamento</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @*<div class="form-group">
            @Html.LabelFor(model => model.FormPag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FormPag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FormPag, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.FormPag, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FormPag, ViewBag.Lista as SelectList, "Selecione uma forma de pagamento", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.CodCupom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodCupom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodCupom, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.CodCupom, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CodCupom, ViewBag.ListaCupom as SelectList, "Selecione um cupom", htmlAttributes: new { @class = "form-control" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.QtdPontos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QtdPontos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QtdPontos, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}
@Html.Raw(TempData["msg"])
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
