@model TCC.Models.Fornecedor

@{
    ViewBag.Title = "Create";
}

<link rel="stylesheet" type="text/css" href="~/CSS/form.css">
<div class="bodyForm">
    <div class="mainForm">
        <h1 class="formTitle">Fornecedor</h1>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.RazaoSocial)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.RazaoSocial)
                </section>
                @Html.ValidationMessageFor(model => model.RazaoSocial)

            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.NomeForn)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.NomeForn)
                </section>
                @Html.ValidationMessageFor(model => model.NomeForn, "", new { @class = "text-danger" })
            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.Cnpj)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.Cnpj)
                </section>
                @Html.ValidationMessageFor(model => model.Cnpj, "", new { @class = "text-danger" })
            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.Tel)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.Tel)
                </section>
                @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })

            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.EmailForn)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.EmailForn)
                </section>
                @Html.ValidationMessageFor(model => model.EmailForn, "", new { @class = "text-danger" })

            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.Comp)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.Comp)
                </section>
                @Html.ValidationMessageFor(model => model.Comp, "", new { @class = "text-danger" })
            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.NumEdif)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.NumEdif)
                </section>
                @Html.ValidationMessageFor(model => model.NumEdif, "", new { @class = "text-danger" })

            </section>


            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.Endereco.CEP)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.Endereco.CEP, new { htmlAttributes = new { @class = "form-control", id = "Cep", name = "Cep" } })
                </section>
                @Html.ValidationMessageFor(model => model.Endereco.CEP, "", new { @class = "text-danger" })

            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.Endereco.Logra)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.Endereco.Logra, new { htmlAttributes = new { @class = "form-control", id = "Logra", name = "Logra" } })
                </section>
                @Html.ValidationMessageFor(model => model.Endereco.Logra, "", new { @class = "text-danger" })

            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.Endereco.Bairro)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.Endereco.Bairro, new { htmlAttributes = new { @class = "form-control", id = "Bairro", name = "Bairro" } })
                </section>
                @Html.ValidationMessageFor(model => model.Endereco.Bairro, "", new { @class = "text-danger" })

            </section>

            <section class="wrapper">
                <section class="input-Data">
                    @Html.LabelFor(model => model.Endereco.Cidade)
                    <section class="line"></section>
                    @Html.EditorFor(model => model.Endereco.Cidade, new { htmlAttributes = new { @class = "form-control", id = "Cidade", name = "Cidade" } })
                </section>
                @Html.ValidationMessageFor(model => model.Endereco.Cidade, "", new { @class = "text-danger" })
            </section>



            <div class="bottomForm">
                <div>
                    <input type="submit" id="submit" value="Create" class="btn btn-default" />
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        }
    </div>
    @Html.Raw(TempData["msg"])
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.10/jquery.mask.js"></script>
    <script src="~/Scripts/Myscript.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            function limpa_formulário_cep() {
                // Limpa valores do formulário de cep.
                $("#Logra").val("");
                $("#Bairro").val("");
                $("#Cidade").val("");
                $("#Uf").val("");
            }

            //Quando o campo cep perde o foco.
            $("#Cep").blur(function () {

                //Nova variável "cep" somente com dígitos.
                var cep = $(this).val().replace(/\D/g, '');

                //Verifica se campo cep possui valor informado.
                if (cep != "") {

                    //Expressão regular para validar o CEP.
                    var validacep = /^[0-9]{8}$/;

                    //Valida o formato do CEP.
                    if (validacep.test(cep)) {

                        //Preenche os campos com "..." enquanto consulta webservice.
                        $("#Logra").val("...");
                        $("#Bairro").val("...");
                        $("#Cidade").val("...");
                        $("#Uf").val("...");

                        //Consulta o webservice viacep.com.br/
                        $.getJSON("https://viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

                            if (!("erro" in dados)) {
                                //Atualiza os campos com os valores da consulta.
                                $("#Logra").val(dados.logradouro);
                                $("#Bairro").val(dados.bairro);
                                $("#Cidade").val(dados.localidade);
                                $("#UF").val(dados.uf);
                            } //end if.
                            else {
                                //CEP pesquisado não foi encontrado.
                                limpa_formulário_cep();
                                alert("CEP não encontrado.");
                            }
                        });
                    } //end if.
                    else {
                        //cep é inválido.
                        limpa_formulário_cep();
                        alert("Formato de CEP inválido.");
                    }
                } //end if.
                else {
                    //cep sem valor, limpa formulário.
                    limpa_formulário_cep();
                }
            });
        });

    </script>
}